name: release

# Automate deployment to PyPI when creating a release tag vX.Y.Z
# will only be published to PyPI if the git tag matches the release version
# and the pre-commit and tests pass

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+*"
jobs:

  check-release-tag:

    # Only run this job on the main repository and not on forks
    if: github.repository == 'sissaschool/sportran'
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - run: python .github/workflows/check_release_tag.py $GITHUB_REF setup.json

  pre-commit:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Cache python dependencies
      id: cache-pip
      uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: pip-pre-commit-${{ hashFiles('**/setup.json') }}
        restore-keys:
          pip-pre-commit-

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install python dependencies
      run:
        pip install -e .[pre-commit,tests]

    - name: Run pre-commit
      run:
        pre-commit run --all-files || ( git status --short ; git diff ; exit 1 )

  tests:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Cache python dependencies
      id: cache-pip
      uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: pip-pre-commit-${{ hashFiles('**/setup.json') }}
        restore-keys:
          pip-pre-commit-

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install python dependencies
      run: |
        pip install --upgrade setuptools
        pip install -e .[tests]

    - name: Test with pytest
      run: |
        pytest -sv tests

  publish:

    name: Publish to PyPI

    needs: [check-release-tag, pre-commit, tests]

    runs-on: ubuntu-latest

    steps:
    - name: Checkout source
      uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Build package
      run: |
        pip install wheel
        python setup.py sdist bdist_wheel
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@v1.1.0
      with:
        user: __token__
        password: ${{ secrets.PYPI_SPORTRAN }}
